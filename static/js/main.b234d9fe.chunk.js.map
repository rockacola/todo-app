{"version":3,"sources":["handlers/todo-storage-handler.ts","reducers/todo-slice.ts","store.ts","views/landing.tsx","views/not-found.tsx","factories/todo-item-factory.ts","helpers/cast-helper.ts","helpers/timing-helper.ts","modules/todos-module.ts","partials/add-todo-item-form.tsx","partials/remote-storage-connection.tsx","views/todos.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoStorageHandler","dataStr","localStorage","getItem","JSON","parse","lists","stringify","setItem","initialState","getLists","todoSlice","createSlice","name","reducers","addNewList","state","action","todoListId","payload","todoListTitle","push","id","title","items","setLists","addItemToExistingList","todoItem","targetList","find","list","editItem","targetItem","item","isComplete","deleteItem","todoItemId","newItems","filter","actions","store","configureStore","reducer","todo","todoReducer","middleware","getDefaultMiddleware","concat","logger","Landing","console","log","process","to","NotFound","className","TodoItemFactory","padStart","Math","floor","random","toString","listId","completedAt","createdAt","Date","now","updatedAt","CastHelper","val","toLowerCase","TimingHelper","ms","Promise","resolve","reject","setTimeout","TODO_ITEMS_BASE_DIR","TodosModule","builder","privateClient","declareType","type","properties","required","exports","init","cache","on","addTodoItem","a","path","storeObject","updateTodoItem","removeTodoItem","remove","listTodoItems","getAll","AddTodoItemForm","onSubmit","onTitleChange","value","onChange","placeholder","RemoteStorageConnection","isConnected","onConnect","onDisconnect","operatorTitle","additionalClasses","onClick","e","remoteStorage","CLAIM_DIR","Todos","useState","newItemTitle","setNewItemTitle","displayTodoItems","setDisplayTodoItems","isRemoteStorageConnected","setIsRemoteStorageConnected","useEffect","RemoteStorage","logging","toBool","modules","access","claim","updateDisplayTodoItems","toast","info","err","delay","sleep","myTodos","todoItemsRes","todoItems","Object","values","sortedItems","sortBy","performAddTodoItem","newItem","success","performRemoveTodoItem","renderTodoItem","index","isCompleted","titleAdditionalClasses","mutatedItem","clone","onIsCompleteToggleHandler","onItemDeleteHandler","map","preventDefault","create","target","account","prompt","connect","disconnect","App","basename","exact","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b234d9fe.chunk.js","sourcesContent":["import { TodoList } from '../interfaces'\n\nexport class TodoStorageHandler {\n  static getLists(): TodoList[] {\n    const dataStr = localStorage.getItem('todo-app:lists')\n    if (!dataStr) {\n      return []\n    }\n    const data = JSON.parse(dataStr)\n    return data\n  }\n\n  static setLists(lists: TodoList[]) {\n    const dataStr = JSON.stringify(lists)\n    localStorage.setItem('todo-app:lists', dataStr)\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { TodoStorageHandler } from '../handlers'\nimport { TodoItem, TodoList } from '../interfaces'\n\ninterface TodoState {\n  lists: TodoList[]\n}\n\nconst initialState: TodoState = {\n  lists: TodoStorageHandler.getLists(),\n}\n\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addNewList: (state, action) => {\n      const todoListId: string = action.payload.todoListId\n      // TODO: check if the supplied ID is indeed unique\n      const todoListTitle: string = action.payload.todoListTitle\n      state.lists.push({\n        id: todoListId,\n        title: todoListTitle,\n        items: [],\n      })\n\n      TodoStorageHandler.setLists(state.lists)\n    },\n\n    addItemToExistingList: (state, action) => {\n      const todoListId: string = action.payload.todoListId\n      const todoItem: TodoItem = action.payload.todoItem\n\n      const targetList = state.lists.find((list) => list.id === todoListId)\n      if (!targetList) {\n        return\n      }\n\n      targetList.items.push(todoItem)\n      TodoStorageHandler.setLists(state.lists)\n    },\n\n    editItem: (state, action) => {\n      const todoListId: string = action.payload.todoListId\n      const todoItem: TodoItem = action.payload.todoItem\n\n      const targetList = state.lists.find((list) => list.id === todoListId)\n      if (!targetList) {\n        // TODO: warning\n        return\n      }\n\n      const targetItem = targetList.items.find(\n        (item) => item.id === todoItem.id\n      )\n      if (!targetItem) {\n        // TODO: warning\n        return\n      }\n\n      targetItem.title = todoItem.title\n      targetItem.isComplete = todoItem.isComplete\n      TodoStorageHandler.setLists(state.lists)\n    },\n\n    deleteItem: (state, action) => {\n      const todoListId: string = action.payload.todoListId\n      const todoItemId: string = action.payload.todoItemId\n\n      const targetList = state.lists.find((list) => list.id === todoListId)\n      if (!targetList) {\n        // TODO: warning\n        return\n      }\n\n      const newItems = targetList.items.filter((item) => item.id !== todoItemId)\n      targetList.items = newItems\n      TodoStorageHandler.setLists(state.lists)\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addNewList, addItemToExistingList, deleteItem, editItem } =\n  todoSlice.actions\n\nexport default todoSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport todoReducer from './reducers/todo-slice'\n\nexport const store = configureStore({\n  reducer: {\n    todo: todoReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n","import { Redirect } from 'react-router'\n\nfunction Landing() {\n  console.log('process.env:', process.env)\n  const path = `/todos/1`\n  return <Redirect to={path} />\n}\n\nexport default Landing\n","function NotFound() {\n  return (\n    <div className=\"h-screen bg-gray-100\">\n      <div className=\"py-8\">\n        <div className=\"w-100 max-w-sm mx-auto bg-white rounded p-4 text-center\">\n          <h1 className=\"text-lg font-bold text-gray-800\">Not Found</h1>\n          <p>Check your URL and try again.</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NotFound\n","import { padStart } from 'lodash'\nimport { TodoItemRS } from '../interfaces'\n\nconst FIXED_LIST_ID = `l_1`\n\nexport class TodoItemFactory {\n  static create(title: string): TodoItemRS {\n    const id = padStart(Math.floor(Math.random() * 1000000).toString(), 6, '0')\n\n    return {\n      id: `i_${id}`,\n      listId: FIXED_LIST_ID,\n      title: title,\n      completedAt: -1,\n      createdAt: Math.floor(Date.now() / 1000),\n      updatedAt: -1,\n    }\n  }\n}\n","export class CastHelper {\n  static toBool(val: string | undefined): boolean {\n    if (!val) {\n      return false\n    }\n    // TODO: broader var support, eg/ '1'\n    return val.toLowerCase() === 'true'\n  }\n}\n","export class TimingHelper {\n  static sleep(ms: number): Promise<void> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        return resolve()\n      }, ms)\n    })\n  }\n}\n","import { TodoItemRS } from '../interfaces'\n\nconst TODO_ITEMS_BASE_DIR = process.env.REACT_APP_STORAGE_TODO_ITEMS_BASE_DIR\n\nexport const TodosModule = {\n  name: process.env.REACT_APP_STORAGE_CLAIM_DIR,\n  builder: (privateClient: any) => {\n    privateClient.declareType('todoItem', {\n      type: 'object',\n      properties: {\n        id: { type: 'string' },\n        listId: { type: 'string' },\n        title: { type: 'string' },\n        completedAt: { type: 'number' },\n        createdAt: { type: 'number' },\n        updatedAt: { type: 'number' },\n      },\n      required: ['id', 'listId', 'title', 'createdAt'],\n    })\n\n    return {\n      exports: {\n        init: () => {\n          privateClient.cache(TODO_ITEMS_BASE_DIR)\n        },\n\n        on: privateClient.on,\n\n        addTodoItem: async (item: TodoItemRS) => {\n          const path = TODO_ITEMS_BASE_DIR + item.id\n          return privateClient.storeObject('todoItem', path, item)\n        },\n\n        updateTodoItem: async (item: TodoItemRS) => {\n          const path = TODO_ITEMS_BASE_DIR + item.id\n          return privateClient.storeObject('todoItem', path, item)\n        },\n\n        removeTodoItem: async (id: string) => {\n          const path = TODO_ITEMS_BASE_DIR + id\n          return privateClient.remove(path)\n        },\n\n        listTodoItems: async () => {\n          return privateClient.getAll(TODO_ITEMS_BASE_DIR)\n        },\n      },\n    }\n  },\n}\n","import { PlusIcon } from '@heroicons/react/outline'\nimport React from 'react'\n\ninterface Props {\n  onSubmit: (e: React.FormEvent) => void\n  title: string\n  onTitleChange: (e: React.ChangeEvent) => void\n}\n\nexport function AddTodoItemForm({ onSubmit, title, onTitleChange }: Props) {\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"flex items-center\">\n        <input\n          className=\"p-4 bg-gray-50 focus:bg-gray-100 flex-grow rounded-tl rounded-bl\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={onTitleChange}\n          placeholder=\"New item...\"\n        />\n        <button\n          className=\"px-5 py-4 bg-green-400 bg-opacity-70 transition hover:bg-opacity-100 rounded-tr rounded-br\"\n          type=\"submit\"\n        >\n          <PlusIcon className=\"w-6 h-6\" />\n        </button>\n      </div>\n    </form>\n  )\n}\n","import { RefreshIcon } from '@heroicons/react/outline'\n\ninterface Props {\n  isConnected: boolean\n  onConnect: any\n  onDisconnect: any\n}\n\nexport function RemoteStorageConnection({\n  isConnected,\n  onConnect,\n  onDisconnect,\n}: Props) {\n  const connectionToggleHandler = (e: React.MouseEvent) => {\n    if (isConnected) {\n      onDisconnect()\n    } else {\n      onConnect()\n    }\n  }\n  const operatorTitle = isConnected\n    ? 'Disconnect from RemoteStorage'\n    : 'Connect to a RemoteStorage'\n  const additionalClasses = isConnected ? 'bg-red-500' : ''\n\n  return (\n    <div className=\"absolute top-6 right-6\">\n      <div\n        className={`p-2 bg-gray-200 rounded-full transition hover:bg-opacity-80 cursor-pointer text-gray-50 ${additionalClasses}`}\n        onClick={connectionToggleHandler}\n        title={operatorTitle}\n      >\n        <RefreshIcon className=\"w-6 h-6\" />\n      </div>\n    </div>\n  )\n}\n","import { CheckIcon, EmojiHappyIcon, TrashIcon } from '@heroicons/react/outline'\nimport { clone, sortBy } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport RemoteStorage from 'remotestoragejs'\nimport { TodoItemFactory } from '../factories'\nimport { CastHelper, TimingHelper } from '../helpers'\nimport { TodoItemRS } from '../interfaces'\nimport { TodosModule } from '../modules/todos-module'\nimport { AddTodoItemForm } from '../partials/add-todo-item-form'\nimport { RemoteStorageConnection } from '../partials/remote-storage-connection'\n\nconst CLAIM_DIR = process.env.REACT_APP_STORAGE_CLAIM_DIR\nlet remoteStorage: RemoteStorage\n\nfunction Todos() {\n  // console.log('TodosRS component rendered.')\n  // console.log('process.env:', process.env)\n\n  const [newItemTitle, setNewItemTitle] = useState<string>('')\n  const [displayTodoItems, setDisplayTodoItems] = useState<TodoItemRS[]>([])\n  const [isRemoteStorageConnected, setIsRemoteStorageConnected] =\n    useState<boolean>(false)\n\n  const initRemoteStorage = () => {\n    console.log('initRemoteStorage triggered.')\n\n    remoteStorage = new RemoteStorage({\n      logging: CastHelper.toBool(process.env.REACT_APP_STORAGE_LOG_ENABLED),\n      modules: [TodosModule],\n    })\n    remoteStorage.access.claim(CLAIM_DIR, 'rw')\n    // const remoteClient = remoteStorage.scope('/' + CLAIM_DIR + '/');\n\n    remoteStorage.on('ready', () => {\n      console.log('remoteStorage.ready event triggered.')\n    })\n\n    remoteStorage.on('connected', () => {\n      console.log('remoteStorage.connected event triggered.')\n      updateDisplayTodoItems()\n      setIsRemoteStorageConnected(true)\n      toast.info('RemoteStorage connected!')\n    })\n\n    remoteStorage.on('network-offline', () => {\n      console.log('remoteStorage.network-offline event triggered.')\n    })\n\n    remoteStorage.on('network-online', () => {\n      console.log('remoteStorage.network-online event triggered.')\n    })\n\n    remoteStorage.on('disconnected', () => {\n      console.log('remoteStorage.disconnected event triggered.')\n      setIsRemoteStorageConnected(false)\n      toast.info('RemoteStorage disconnected!')\n    })\n\n    remoteStorage.on('error', (err: any) => {\n      console.log('remoteStorage.error event triggered. err:', err)\n    })\n\n    remoteStorage.onChange(`/${CLAIM_DIR}/`, () => {\n      console.log('remoteStorage.onChange event triggered.')\n    })\n  }\n\n  useEffect(() => {\n    console.log('Component onMount triggered.')\n    initRemoteStorage()\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateDisplayTodoItems = async (delay = 0) => {\n    // Inject artificial delay as a way to workaround racing condition\n    if (delay > 0) {\n      await TimingHelper.sleep(delay)\n    }\n\n    // console.log('updateDisplayTodoItems triggered.')\n    const todoItemsRes = await (remoteStorage as any).myTodos.listTodoItems()\n    // console.log('todoItemsRes:', todoItemsRes)\n    const todoItems = Object.values(todoItemsRes).filter(\n      (item) => typeof item === 'object'\n    ) as TodoItemRS[]\n    // console.log('todoItemsArray:', todoItemsArray)\n    const sortedItems = sortBy(todoItems, (item) => item.createdAt)\n\n    setDisplayTodoItems(sortedItems)\n  }\n\n  const onNewItemTitleChangeHandler = (e: React.ChangeEvent) => {\n    // console.log('onNewItemTitleChangeHandler triggered. e:', e)\n    setNewItemTitle((e.target as any).value) // TODO: typing\n  }\n\n  const performAddTodoItem = async (newItem: TodoItemRS) => {\n    await (remoteStorage as any).myTodos.addTodoItem(newItem)\n    await updateDisplayTodoItems()\n    setNewItemTitle('') // Reset input filed\n    toast.success('New todo item added.')\n  }\n\n  const onSubmitHandler = (e: React.FormEvent) => {\n    e.preventDefault()\n    console.log('onSubmitHandler triggered. e:', e)\n    const newItem = TodoItemFactory.create(newItemTitle)\n    performAddTodoItem(newItem)\n  }\n\n  const onIsCompleteToggleHandler = (item: TodoItemRS) => {\n    console.log('onIsCompleteToggleHandler triggered. item:', item)\n\n    const mutatedItem = clone(item)\n    mutatedItem.completedAt =\n      item.completedAt > -1 ? -1 : Math.floor(Date.now() / 1000)\n    mutatedItem.updatedAt = Math.floor(Date.now() / 1000)\n    ;(remoteStorage as any).myTodos.updateTodoItem(mutatedItem)\n    updateDisplayTodoItems()\n  }\n\n  const performRemoveTodoItem = async (item: TodoItemRS) => {\n    await (remoteStorage as any).myTodos.removeTodoItem(item.id)\n    await updateDisplayTodoItems()\n    toast.success('Todo item deleted.')\n  }\n\n  const onItemDeleteHandler = (item: TodoItemRS) => {\n    console.log('onItemDeleteHandler triggered. item:', item)\n    performRemoveTodoItem(item)\n  }\n\n  const connectHandler = () => {\n    console.log('connectHandler triggered.')\n    var account = prompt('What is your account (eg name@example.com)?')\n    if (account) {\n      console.log(`connecting to ${account} ...`)\n      remoteStorage.connect(account)\n    }\n  }\n\n  const disconnectHandler = () => {\n    remoteStorage.disconnect()\n  }\n\n  const renderTodoItem = (item: TodoItemRS, index: number) => {\n    const isCompleted = item.completedAt > -1\n    const titleAdditionalClasses = isCompleted ? 'line-through' : ''\n\n    return (\n      <div\n        key={index}\n        className=\"p-2 my-2 bg-green-50 transition hover:bg-green-100 rounded flex items-stretch\"\n      >\n        <div\n          className=\"w-12 h-12 bg-green-300 bg-opacity-70 rounded-lg transition hover:bg-opacity-100 cursor-pointer text-green-800 flex items-center justify-center\"\n          onClick={() => onIsCompleteToggleHandler(item)}\n        >\n          {isCompleted && <CheckIcon className=\"w-8 h-8\" />}\n        </div>\n        <div\n          className={`flex-grow ml-4 flex items-center text-gray-800 ${titleAdditionalClasses}`}\n        >\n          {item.title}\n        </div>\n        <div\n          className=\"px-4 py-2 bg-red-500 bg-opacity-70 rounded transition hover:bg-opacity-100 cursor-pointer flex items-center\"\n          onClick={() => onItemDeleteHandler(item)}\n        >\n          <TrashIcon className=\"w-4 h-4 text-gray-50\" />\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <div className=\"w-100 max-w-xl h-full mx-auto bg-white py-4 md:px-4 relative\">\n        <h1 className=\"text-lg font-bold text-gray-800 text-center leading-tight p-4 mb-4\">\n          Todo List\n        </h1>\n        <div className=\"\">\n          {displayTodoItems.map((item, index) => renderTodoItem(item, index))}\n        </div>\n        <div>\n          <AddTodoItemForm\n            title={newItemTitle}\n            onSubmit={onSubmitHandler}\n            onTitleChange={onNewItemTitleChangeHandler}\n          />\n        </div>\n        <RemoteStorageConnection\n          isConnected={isRemoteStorageConnected}\n          onConnect={connectHandler}\n          onDisconnect={disconnectHandler}\n        />\n        <div className=\"my-8\">\n          <EmojiHappyIcon className=\"w-16 h-16 text-gray-100 m-auto\" />\n        </div>\n        <div className=\"text-sm text-gray-200 text-center\">\n          Todo App {process.env.REACT_APP_VERSION}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Todos\n","import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { store } from './store'\nimport { Provider } from 'react-redux'\nimport Landing from './views/landing'\nimport NotFound from './views/not-found'\nimport Todos from './views/todos'\nimport { ToastContainer } from 'react-toastify'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/todos/1\" exact>\n            <Todos />\n          </Route>\n          <Route path=\"/\" exact>\n            <Landing />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n        <ToastContainer position=\"bottom-right\" />\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './global.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}